{"version":3,"sources":["components/Navbar.js","components/Experience.js","components/Hero.js","components/Contact.js","pages/About.js","pages/Projects.js","App.js","serviceWorker.js","index.js"],"names":["App","className","to","Experience","style","fontWeight","href","target","Hero","Contact","useState","isEmailClicked","setEmailClicked","useEffect","onClick","navigator","clipboard","writeText","About","Projects","Navbar","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2QAyBeA,MArBf,WACE,OACE,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,4CACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,6BAAvB,QAIA,6BACE,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,6BAA5B,SAGA,kBAAC,IAAD,CAAMC,GAAG,YAAYD,UAAU,kBAA/B,gBC0BKE,MAvCf,WACE,OACE,yBAAKF,UAAU,6BACb,wBAAIA,UAAU,eAAeG,MAAO,CAAEC,WAAY,MAAlD,cAGA,yBAAKJ,UAAU,uCACb,yDAC8B,IAC5B,uBACEA,UAAU,iCACVK,KAAK,8BACLC,OAAO,UAHT,aAQF,4BACA,uBAAGN,UAAU,IAAb,wBAGF,yBAAKA,UAAU,4BACb,kEACuC,IACrC,uBACEA,UAAU,iCACVK,KAAK,oCACLC,OAAO,UAHT,eAQF,4BACA,uBAAGN,UAAU,IAAb,4BCZOO,MAnBf,WACE,OACE,oCACE,yBAAKP,UAAU,iCACb,wBAAIA,UAAU,WAAWG,MAAO,CAAEC,WAAY,MAA9C,8CAEE,6BAFF,2CAIA,uBAAGJ,UAAU,6BAAb,0IAMF,kBAAC,EAAD,Q,QCwCSQ,MAvDf,WAAoB,IAAD,EACyBC,oBAAS,GADlC,mBACVC,EADU,KACMC,EADN,KAQjB,OALAC,qBAAU,WAERD,GAAgB,KACf,IAGD,yBAAKX,UAAU,8BACb,wBAAIA,UAAU,SAASG,MAAO,CAAEC,WAAY,MAA5C,WAIA,6BACE,uBACEJ,UAAU,oDACVa,QAAS,WACPC,UAAUC,UAAUC,UAAU,sBAC9BL,GAAgB,KAGjBD,EACC,0BAAMV,UAAU,iBAAhB,yBAEA,0BAAMA,UAAU,iBAAhB,wBACC,IAXL,sBAcA,uBACEA,UAAU,+CACVK,KAAK,8BACLC,OAAO,UAHT,iBAOA,uBACEN,UAAU,+CACVK,KAAK,6BACLC,OAAO,UAHT,kBAOA,uBACEN,UAAU,2CACVK,KAAK,yCACLC,OAAO,UAHT,sBC7BOW,MAff,WACE,OACE,yBAAKjB,UAAU,6BACb,wBAAIA,UAAU,WAAWG,MAAO,CAAEC,WAAY,MAA9C,YAGA,uBAAGJ,UAAU,iCAAb,6JCISkB,MAXf,WACE,OACE,yBAAKlB,UAAU,6BACb,wBAAIA,UAAU,0BAA0BG,MAAO,CAAEC,WAAY,MAA7D,YAGA,uBAAGJ,UAAU,iCAAb,iCC0BSD,MAnBf,WACE,OACE,kBAAC,IAAD,KACE,oCACE,yBAAKC,UAAU,qBACb,kBAACmB,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWf,IACjC,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAIC,UAAWpB,IACjC,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,SAASC,UAAWL,IACtC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,YAAYC,UAAWJ,KAE3C,kBAAC,EAAD,UCfUK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBlB,WACrBA,UAAUmB,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.bfa2f24d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='pv3 f3 bb b--white-60'>\r\n      <div className='d-flex justify-between justify-center-ns'>\r\n        <Link to='/' className='link white dim mr3 mr4-ns'>\r\n          HOME\r\n        </Link>\r\n\r\n        <div>\r\n          <Link to='/about' className='link white dim mr3 mr4-ns'>\r\n            ABOUT\r\n          </Link>\r\n          <Link to='/projects' className='link white dim'>\r\n            PROJECTS\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './../App.css';\r\n\r\nfunction Experience() {\r\n  return (\r\n    <div className='pv4 pv5-ns bb b--white-60'>\r\n      <h1 className='f3 f2-ns mb4' style={{ fontWeight: 400 }}>\r\n        EXPERIENCE\r\n      </h1>\r\n      <div className='f6 f4-ns lh-copy measure mb3 mb4-ns'>\r\n        <p>\r\n          Frontend Developer Intern @{' '}\r\n          <a\r\n            className='link white dim underline-hover'\r\n            href='https://www.ericsson.com/en'\r\n            target='_blank'\r\n          >\r\n            Ericsson\r\n          </a>\r\n        </p>\r\n        <p></p>\r\n        <p className=''>Aug, 2020 - Present</p>\r\n      </div>\r\n\r\n      <div className='f6 f4-ns lh-copy measure'>\r\n        <p>\r\n          Rapid Application Developer Intern @{' '}\r\n          <a\r\n            className='link white dim underline-hover'\r\n            href='https://corporate.exxonmobil.com/'\r\n            target='_blank'\r\n          >\r\n            ExxonMobil\r\n          </a>\r\n        </p>\r\n        <p></p>\r\n        <p className=''>Dec, 2019 - May, 2020</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport './../App.css';\r\n\r\nimport Experience from './Experience';\r\n\r\nfunction Hero() {\r\n  return (\r\n    <>\r\n      <div className='pv5 pv6-ns pb6 bb b--white-60'>\r\n        <h1 className='f3 f2-ns' style={{ fontWeight: 400 }}>\r\n          Bekzodjon Norkuziev - Frontend & JavaScript\r\n          <br /> developer, currently based in Hungary.\r\n        </h1>\r\n        <p className='f6 f4-ns lh-copy measure '>\r\n          Currently working as a Developer Intern at Ericsson. Also, master's\r\n          student at BME. I mostly work with JavaScript, React, Express.js.\r\n        </p>\r\n      </div>\r\n\r\n      <Experience />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './../App.css';\r\n\r\nfunction Contact() {\r\n  const [isEmailClicked, setEmailClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    setEmailClicked(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className='pv4 pb5-ns bb b--white-60 '>\r\n      <h1 className='f2 mb4' style={{ fontWeight: 400 }}>\r\n        CONTACT\r\n      </h1>\r\n\r\n      <div>\r\n        <a\r\n          className='f6 dim ba bw1 ph3 pv2 mb2 dib white mr2 email-btn'\r\n          onClick={() => {\r\n            navigator.clipboard.writeText('bekzodnx@gmail.com');\r\n            setEmailClicked(true);\r\n          }}\r\n        >\r\n          {isEmailClicked ? (\r\n            <span className='tooltip-email'>Copied to clipboard: </span>\r\n          ) : (\r\n            <span className='tooltip-email'>Click here to copy: </span>\r\n          )}{' '}\r\n          bekzodnx@gmail.com\r\n        </a>\r\n        <a\r\n          className='f6 link dim ba bw1 ph3 pv2 mb2 dib white mr2'\r\n          href='https://github.com/bekzodnj'\r\n          target='_blank'\r\n        >\r\n          GitHub &#x2197;\r\n        </a>\r\n        <a\r\n          className='f6 link dim ba bw1 ph3 pv2 mb2 dib white mr2'\r\n          href='https://twitter.com/istbek'\r\n          target='_blank'\r\n        >\r\n          Twitter &#x2197;\r\n        </a>\r\n        <a\r\n          className='f6 link dim ba bw1 ph3 pv2 mb2 dib white'\r\n          href='https://www.linkedin.com/in/bekzodjon/'\r\n          target='_blank'\r\n        >\r\n          LinkedIn &#x2197;\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport './../App.css';\r\n\r\nfunction About() {\r\n  return (\r\n    <div className='pv5 pv6-ns bb b--white-60'>\r\n      <h1 className='f3 f2-ns' style={{ fontWeight: 400 }}>\r\n        About Me\r\n      </h1>\r\n      <p className='f6 f4-ns lh-copy measure  mw7'>\r\n        My name is Bekzodjon and I'm a Computer Engineering master's student at\r\n        BME based in Budapest. Currently I'm working as a developer intern at\r\n        Ericsson.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nfunction Projects() {\r\n  return (\r\n    <div className='pv5 pv6-ns bb b--white-60'>\r\n      <h1 className='f3 f2-ns project-header' style={{ fontWeight: 400 }}>\r\n        Projects\r\n      </h1>\r\n      <p className='f6 f4-ns lh-copy measure  mw7'>Coming soon... &#128640;</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\nimport 'tachyons';\r\nimport 'bootstrap-4-grid';\r\nimport './App.css';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Hero from './components/Hero';\r\nimport Experience from './components/Experience';\r\nimport Contact from './components/Contact';\r\n\r\nimport About from './pages/About';\r\nimport Projects from './pages/Projects';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <>\r\n        <div className='center ph4-ns ph4'>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/' component={Hero} />\r\n            <Route exact path='/' component={Experience} />\r\n            <Route exact path='/about' component={About} />\r\n            <Route exact path='/projects' component={Projects} />\r\n          </Switch>\r\n          <Contact />\r\n        </div>\r\n      </>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}